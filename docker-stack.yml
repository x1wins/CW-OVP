version: '3'
services:
  db:
    image: postgres:10.10
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file: .env.dev.docker.compose
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
    entrypoint: redis-server --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
  web:
    image: x1wins/cw-ovp
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    env_file:
      - .env.dev.docker.compose
      - .env.dev.s3
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - db
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
  sidekiq:
    image: x1wins/cw-ovp
    command: bundle exec sidekiq -c 2
    env_file:
      - .env.dev.docker.compose
      - .env.dev.s3
    depends_on:
      - redis
    networks:
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]
    volumes:
      - local-storage:/storage
networks:
  backend:
volumes:
  db-data:
  redis-data:
  local-storage: