apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose --file docker-stack.yml convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.network/backend: "true"
    io.kompose.service: web
  name: web
spec:
  containers:
    - args:
        - bash
        - -c
        - rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            configMapKeyRef:
              key: AWS_ACCESS_KEY_ID
              name: env-dev-s3
        - name: AWS_CLOUDFRONT_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: AWS_CLOUDFRONT_DOMAIN
              name: env-dev-s3
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            configMapKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: env-dev-s3
        - name: BUCKET
          valueFrom:
            configMapKeyRef:
              key: BUCKET
              name: env-dev-s3
        - name: CABLE_REDIS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: CABLE_REDIS_SERVER_URL
              name: env-dev-docker-compose
        - name: CDN_BUCKET
          valueFrom:
            configMapKeyRef:
              key: CDN_BUCKET
              name: env-dev-s3
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              key: DATABASE_NAME
              name: env-dev-docker-compose
        - name: DATABASE_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DATABASE_PASSWORD
              name: env-dev-docker-compose
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              key: DATABASE_PORT
              name: env-dev-docker-compose
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: env-dev-docker-compose
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DATABASE_USERNAME
              name: env-dev-docker-compose
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env-dev-docker-compose
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env-dev-docker-compose
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env-dev-docker-compose
        - name: RAILS_SERVE_STATIC_FILES
          valueFrom:
            configMapKeyRef:
              key: RAILS_SERVE_STATIC_FILES
              name: env-dev-docker-compose
        - name: REDIS_CLIENT_URL
          valueFrom:
            configMapKeyRef:
              key: REDIS_CLIENT_URL
              name: env-dev-docker-compose
        - name: REDIS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: REDIS_SERVER_URL
              name: env-dev-docker-compose
        - name: REGION
          valueFrom:
            configMapKeyRef:
              key: REGION
              name: env-dev-s3
        - name: WEB_LOGO_URL
          valueFrom:
            configMapKeyRef:
              key: WEB_LOGO_URL
              name: env-dev-docker-compose
        - name: WEB_TITLE
          valueFrom:
            configMapKeyRef:
              key: WEB_TITLE
              name: env-dev-docker-compose
      image: x1wins/cw-ovp
      name: web
      ports:
        - containerPort: 3000
      resources: {}
  restartPolicy: OnFailure
status: {}
